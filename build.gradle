plugins {
    id("java-library")
    id("jacoco")
    id("maven-publish")
    id("signing")
}

group = "com.kazurayam"
version = "0.18.4"

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

repositories {
    mavenCentral()
    mavenLocal()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

def defaultEncoding = "UTF-8"
tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }
tasks.withType(GroovyCompile).each { it.groovyOptions.encoding = defaultEncoding }
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}


dependencies {
    api libs.gson
    api libs.javaDiffUtils

    implementation libs.ashot
    implementation libs.freemarker
    implementation libs.jsoup
    implementation libs.slf4j.api
    implementation libs.subprocessj

    testImplementation libs.slf4j.simple
    testImplementation libs.junit.jupiter
    testImplementation libs.plantuml
    testImplementation libs.timekeeper
    testImplementation libs.s3fs
    testImplementation libs.unittesthelper
    testImplementation libs.seleniumjava
}

java {
    withJavadocJar()
    withSourcesJar()
}

test({
    useJUnitPlatform()
    finalizedBy(jacocoTestReport)
})

jar {
    archiveBaseName.set(rootProject.name)
    archiveVersion.set(rootProject.version)
}

javadoc {
    options.locale = "en_US"
    options.showFromProtected()
    failOnError = false

}

task copyJavadocToDocsDir(type: Copy) {
    from "build/docs/javadoc"
    into "docs/api"
}
javadoc.finalizedBy copyJavadocToDocsDir

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    repositories {
        maven {
            def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo: snapshotRepo
            credentials {
                username = project.hasProperty("ossrhUsername") ? ossrhUsername : "Unknown user"
                password = project.hasProperty("ossrhPassword") ? ossrhPassword : "Unknown password"
            }
        }
        maven {
            name = "gpr"
            url = uri("https://maven.pkg.github.com/kazurayam/materialstore")
            credentials {
                username = project.findProperty("gpr.user")
                password = project.findProperty("gpr.key")
            }
        }
    }
    publications {
        materialstore(MavenPublication) {
            from components.java
            pom {
                groupId = project.group
                name = project.rootProject.name
                description = "A Java/Groovy API to store objects (Screenshots, HTML, JSON, XML) collected during End-to-end testings, plus empowered by diffing and reporting tools"
                url = "https://kazurayam.github.io/materialstore/"

                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org.licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "kazurayam"
                        name = "URAYAMA,kazuaki"
                        email = "kazuaki.urayama@gmail.com"
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/kazurayam/${project.rootProject.name}.git"
                    developerConnection = "scm:git:git@github.com:kazurayam/${project.rootProject.name}.git"
                    url = "https://github.com/kazurayam/${project.rootProject.name}"
                }
            }
        }
    }
}

signing {
    sign publishing.publications.materialstore
}

// I do not want to sign the SNAPSHOT
tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}
