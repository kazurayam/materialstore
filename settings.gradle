plugins {
    id "com.gradle.enterprise" version "3.12.2"
}

rootProject.name = 'materialstore'

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            // should be removed at 0.13.1
            version('ashot', '1.5.4')
            library('ashot', 'ru.yandex.qatools.ashot', 'ashot').versionRef('ashot')

            version('freemarker', '2.3.31')
            library('freemarker', 'org.freemarker', 'freemarker').versionRef('freemarker')

            version('gson', '2.10.1')
            library('gson', 'com.google.code.gson', 'gson').versionRef('gson')

            version('javaDiffUtils', '4.11')
            library('javaDiffUtils', 'io.github.java-diff-utils', 'java-diff-utils').versionRef('javaDiffUtils')

            version('jsoup', '1.14.3')
            library('jsoup', 'org.jsoup', 'jsoup').versionRef('jsoup')

            version('junit5', '5.8.2')
            library('junit-jupiter', 'org.junit.jupiter', 'junit-jupiter').versionRef('junit5')

            version('plantuml', '8059')
            library('plantuml', 'net.sourceforge.plantuml', 'plantuml').versionRef('plantuml')

            version('s3fs', '2.2.2')
            library('s3fs', 'com.upplication', 's3fs').versionRef('s3fs')
            
            version('seleniumjava', '4.33.0')
            library('seleniumjava', 'org.seleniumhq.selenium', 'selenium-java').versionRef('seleniumjava')

            version('slf4j', '2.0.17')
            library('slf4j-api', 'org.slf4j', 'slf4j-api').versionRef('slf4j')
            library('slf4j-simple', 'org.slf4j', 'slf4j-simple').versionRef('slf4j')

            version('subprocessj', '0.3.4')
            library('subprocessj', 'com.kazurayam', 'subprocessj').versionRef('subprocessj')

            version('timekeeper', '0.4.1')
            library('timekeeper', 'com.kazurayam', 'timekeeper').versionRef('timekeeper')

            version('unittesthelper', '0.5.1')
            library('unittesthelper', 'com.kazurayam', 'unittest-helper').versionRef('unittesthelper')
        }
    }
}

gradleEnterprise {
    if (System.getenv("CI") != null) {
        buildScan {
            publishAlways()
            termsOfServiceUrl = "https://gradle.com/terms-of-service"
            termsOfServiceAgree = "yes"
        }
    }
}